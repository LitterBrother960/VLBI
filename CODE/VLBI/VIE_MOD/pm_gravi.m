% ************************************************************************%   Description:%   This subroutine provides, in time domain, the diurnal lunisolar effect%   on polar motion.%     %    N.B.:  The fundamental lunisolar arguments are those of Simon et al.  %%    These corrections should be added to "average"%    EOP values to get estimates of the instantaneous values.%           %               * vectorised *%%   Input:%     rjd           epoch of interest given in mjd (n,1) - dynamical%                   time or TT%                %   Output:%     cor_x         tidal correction in x (radians of arc)%     cor_y         tidal correction in y (radians of arc)%    % %   External calls: 	%     fund_arg.m, as2rad.m%%   coded by Ch. Bizouard (2002)%   Vectorized Matlab-function coded by Mendes Cerveira Paulo Jorge %                   on 26.07.2006%%   Coded for VieVS:%   02 Feb 2009 by Lucia Plank%%   Revision: %   26 May 2010 by Lucia Plank: external function for fundamental arguments%% *************************************************************************function [cor_x,cor_y]=pm_gravi(rjd)dim=size(rjd);if dim(2)>dim(1); rjd=rjd'; end;            halfpi = 1.5707963267948966;%  Oceanic tidal terms present in x (microas),y(microas),ut1(microseconds)       %  NARG(j,6) : Multipliers of GMST+pi and Delaunay arguments. NARG=[...1,-1, 0,-2, 0,-11,-1, 0,-2, 0,-21, 1, 0,-2,-2,-21, 0, 0,-2, 0,-11, 0, 0,-2, 0,-21,-1, 0, 0, 0, 01, 0, 0,-2, 2,-21, 0, 0, 0, 0, 01, 0, 0, 0, 0,-11, 1, 0, 0, 0, 0];coeff= [...  -.44,   .25,   -.25,  -.44 -2.31,  1.32,  -1.32, -2.31  -.44,   .25,   -.25,  -.44 -2.14,  1.23,  -1.23, -2.14-11.36,  6.52,  -6.52,-11.36   .84,  -.48,    .48,   .84 -4.76,  2.73,  -2.73, -4.76 14.27, -8.19,   8.19, 14.27  1.93, -1.11,   1.11,  1.93   .76,  -.43,    .43,   .76];XSIN =coeff(:,1);XCOS =coeff(:,2);YSIN =coeff(:,3);YCOS =coeff(:,4);      T = (rjd - 51544.5)/36525.0;  % julian century      % Arguments in the following order : chi=GMST+pi,l,lp,F,D,Omega      ARG = fund_arg(T,3); % [rad]% Corrections        agt=NARG*ARG';    agt=mod(agt,4.*halfpi);       cor_x  =  cos(agt')*XCOS    + sin(agt')*XSIN;    cor_y  =  cos(agt')*YCOS    + sin(agt')*YSIN;      cor_x   = as2rad(cor_x*1e-6);   %  radians    cor_y   = as2rad(cor_y*1e-6);   %  radians                       